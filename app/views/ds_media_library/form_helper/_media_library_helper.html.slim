.media-library data-media-library=helper.html_id data-media-library-ids=helper.ids required=helper.required
  = form.label helper.file_field_name, helper.label, class: helper.label_css_class

  - if helper.helptext
    .ratio-text = helper.helptext

  label.dsml-media-button for=helper.html_id Media library
  em or
  = form.file_field helper.file_field_name, multiple: helper.multiple

  input.dsml-modal-input type="checkbox" id=helper.html_id
  .dsml-modal-wrapper
    .dsml-modal-bg
    .dsml-modal-content
      label.dsml-modal-close for=helper.html_id
        .borders
      .media-wrapper data-load-url=ds_media_library.folders_path(helper.to_h)
        - helper.selected_resources.each do |resource|
          input name="ds_media_library" type="checkbox" value=resource.id checked=true data=resource.attributes

  dl.dsml-playlist-media id="dsml-selected-media-#{helper.html_id}"

  script#dsml-media-preview-template type="text/x-html-template"
    dfn.dsml-preview-form
      .dsml-preview-wrapper
        - if helper.preview
          | <{{type}} src="{{url}}" controls=true />

        - if helper.multiple
          = form.check_box helper.field_id_name, { multiple: true, checked: true }, "{{id}}", nil
          label
            = form.check_box helper.remove_field_name, { multiple: true }, "{{id}}", nil
            span Remove #{helper.label.downcase.singularize} {{index}}

        - else
          = form.hidden_field helper.field_id_name, value: "{{id}}"
          - if helper.optional
            = form.check_box helper.remove_field_name
            = form.label helper.remove_field_name do
              span Remove #{helper.label.downcase}

        = yield if block_given?

        dt
          figcaption
            | {{resourcesoriginalfilename}}

